Index: test/AnimatorModelTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import org.junit.Before;\nimport org.junit.Test;\n\nimport java.util.NoSuchElementException;\n\nimport cs5004.animator.model.animation.Animator;\nimport cs5004.animator.model.animation.AnimatorModel;\nimport cs5004.animator.model.shape.Oval;\nimport cs5004.animator.model.shape.Rectangle;\nimport cs5004.animator.model.shape.Shape;\n\nimport static org.junit.Assert.assertEquals;\n\n/**\n * This class contains the unit tests for the AnimatorModel class.\n */\npublic class AnimatorModelTest {\n  private Shape r;\n  private Shape c;\n  private Animator model;\n  private Animator m;\n\n  @Before\n  public void setUp() {\n    this.model = new AnimatorModel();\n\n    this.r = new Rectangle(200, 200, 1, 100, 50, 100,\n        1,0,0);\n    this.c = new Oval(500,100, 6, 101, 60, 30, 0,\n        0,1);\n\n    this.m = new AnimatorModel();\n    this.m.addShape(this.r, \"r\");\n    this.m.addShape(this.c, \"c\");\n  }\n\n  @Test\n  public void testGetAnimation1() {\n    assertEquals(\"Shapes:\\n\"\n        + \"Name: r\\n\"\n        + \"Type: rectangle\\n\"\n        + \"Min corner: (200.0,200.0), Width: 50.0, Height: 100.0, Color: (1,0,0)\\n\"\n        + \"Appears at t=1\\n\"\n        + \"Disappears at t=100\\n\\n\"\n        + \"Name: c\\n\"\n        + \"Type: oval\\n\"\n        + \"Center: (500.0,100.0), X radius: 30.0, Y radius: 15.0, Color: (0,0,1)\\n\"\n        + \"Appears at t=6\\n\"\n        + \"Disappears at t=101\\n\\n\", this.m.getAnimation());\n  }\n\n  @Test\n  public void testGetCurrentShapesNoneOnScreen() {\n    assertEquals(\"[]\", this.m.getCurrentShapes(200).toString());\n  }\n\n  @Test // should return only Rectangle r\n  public void testGetCurrentShapesRectangleVisible() {\n    assertEquals(\"[Name: r\\n\"\n            + \"Type: rectangle\\n\"\n            + \"Min corner: (200.0,200.0), Width: 50.0, Height: 100.0, Color: (1,0,0)\\n\"\n            + \"Appears at t=1\\n\"\n            + \"Disappears at t=100\\n]\", this.m.getCurrentShapes(2).toString());\n  }\n\n  @Test // should return only Oval c\n  public void testGetCurrentShapesOvalVisible() {\n    assertEquals(\"[Name: c\\n\"\n            + \"Type: oval\\n\"\n            + \"Center: (500.0,100.0), X radius: 30.0, Y radius: 15.0, Color: (0,0,1)\\n\"\n            + \"Appears at t=6\\n\"\n            + \"Disappears at t=101\\n\"\n            + \"]\", this.m.getCurrentShapes(100).toString());\n  }\n\n  @Test // should return both Oval c and Rectangle r\n  public void testGetCurrentShapesBothVisible() {\n    assertEquals(\"[Name: r\\n\"\n            + \"Type: rectangle\\n\"\n            + \"Min corner: (200.0,200.0), Width: 50.0, Height: 100.0, Color: (1,0,0)\\n\"\n            + \"Appears at t=1\\n\"\n            + \"Disappears at t=100\\n\"\n            + \", Name: c\\n\"\n            + \"Type: oval\\n\"\n            + \"Center: (500.0,100.0), X radius: 30.0, Y radius: 15.0, Color: (0,0,1)\\n\"\n            + \"Appears at t=6\\n\"\n            + \"Disappears at t=101\\n\"\n            + \"]\", this.m.getCurrentShapes(25).toString());\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testScaleShapeNullName() throws IllegalArgumentException {\n    this.m.scaleShape(null, 60, 8, 30,60,\n        40, 60);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testScaleShapeEmptyName() throws IllegalArgumentException {\n    this.m.scaleShape(\"\", 60, 8, 30,60,\n        40, 60);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testScaleShapeInvalidName() throws IllegalArgumentException {\n    this.m.scaleShape(\"h\", 60, 8, 30,60,\n        40, 60);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testScaleShapeSimultaneousScale() throws IllegalArgumentException {\n    this.m.scaleShape(\"c\", 60, 8, 30,60,\n        40, 60);\n    this.m.scaleShape(\"c\", 60, 8, 30,60,\n        40, 60);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testScaleShapeStopOutOfAppearWindow1() throws IllegalArgumentException {\n    this.m.scaleShape(\"c\", 12, 10, 30,60,\n        60, 1);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testScaleShapeStopOutOfAppearWindow() throws IllegalArgumentException {\n    this.m.scaleShape(\"c\", 12, 10, 30,60,\n        50, 103);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testScaleShapeStartOutOfAppearWindow1() throws IllegalArgumentException {\n    this.m.scaleShape(\"c\", 12, 10, 30,60,\n        102, 60);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testScaleShapeStartOutOfAppearWindow() throws IllegalArgumentException {\n    this.m.scaleShape(\"c\", 12, 10, 30,60,\n        5, 60);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testScaleShapeHeightNegative() throws IllegalArgumentException {\n    this.m.scaleShape(\"c\", 12, -10, 30,60,\n        40, 60);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testScaleShapeWidthNegative() throws IllegalArgumentException {\n    this.m.scaleShape(\"c\", -43, 65, 30,60,\n        40, 60);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testScaleShapeBothNegative() throws IllegalArgumentException {\n    this.m.scaleShape(\"c\", -13, -50, 30,60,\n        40, 60);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testScaleShapeHeightZero() throws IllegalArgumentException {\n    this.m.scaleShape(\"c\", 12, 0, 30,60,\n        40, 60);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testScaleShapeWidthZero() throws IllegalArgumentException {\n    this.m.scaleShape(\"c\", 0, 65, 30,60,\n        40, 60);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testScaleShapeBothZero() throws IllegalArgumentException {\n    this.m.scaleShape(\"c\", 0, 0, 30,60,\n        40, 60);\n  }\n\n  @Test\n  public void testScaleShapeHeight() {\n    this.m.scaleShape(\"c\", 60, 8, 30,60,\n        40, 60);\n    assertEquals(\"Shapes:\\n\"\n        + \"Name: r\\n\"\n        + \"Type: rectangle\\n\"\n        + \"Min corner: (200.0,200.0), Width: 50.0, Height: 100.0, Color: (1,0,0)\\n\"\n        + \"Appears at t=1\\n\"\n        + \"Disappears at t=100\\n\\n\"\n        + \"Name: c\\n\"\n        + \"Type: oval\\n\"\n        + \"Center: (500.0,100.0), X radius: 30.0, Y radius: 15.0, Color: (0,0,1)\\n\"\n        + \"Appears at t=6\\n\"\n        + \"Disappears at t=101\\n\\n\"\n        + \"Shape c scales from Width: 60.0, Height: 30.0 to Width: 60.0, Height: 8.0 from t=40\"\n        + \" to t=60\", m.getAnimation());\n  }\n\n  @Test\n  public void testScaleShapeWidth() {\n    this.m.scaleShape(\"c\", 70, 30, 30,60,\n        40, 60);\n    assertEquals(\"Shapes:\\n\"\n        + \"Name: r\\n\"\n        + \"Type: rectangle\\n\"\n        + \"Min corner: (200.0,200.0), Width: 50.0, Height: 100.0, Color: (1,0,0)\\n\"\n        + \"Appears at t=1\\n\"\n        + \"Disappears at t=100\\n\\n\"\n        + \"Name: c\\n\"\n        + \"Type: oval\\n\"\n        + \"Center: (500.0,100.0), X radius: 30.0, Y radius: 15.0, Color: (0,0,1)\\n\"\n        + \"Appears at t=6\\n\"\n        + \"Disappears at t=101\\n\\n\"\n        + \"Shape c scales from Width: 60.0, Height: 30.0 to Width: 70.0, Height: 30.0 from t=40\"\n        + \" to t=60\", m.getAnimation());\n  }\n\n  @Test\n  public void testScaleAllShape() {\n    this.m.scaleShape(\"c\", 10, 15, 30,60,\n        40, 60);\n    assertEquals(\"Shapes:\\n\"\n            + \"Name: r\\n\"\n            + \"Type: rectangle\\n\"\n            + \"Min corner: (200.0,200.0), Width: 50.0, Height: 100.0, Color: (1,0,0)\\n\"\n            + \"Appears at t=1\\n\"\n            + \"Disappears at t=100\\n\\n\"\n            + \"Name: c\\n\"\n            + \"Type: oval\\n\"\n            + \"Center: (500.0,100.0), X radius: 30.0, Y radius: 15.0, Color: (0,0,1)\\n\"\n            + \"Appears at t=6\\n\"\n            + \"Disappears at t=101\\n\\n\"\n            + \"Shape c scales from Width: 60.0, Height: 30.0 to Width: 10.0, Height: 15.0 from t=40\"\n            + \" to t=60\", m.getAnimation());\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testChangeColorNullName() throws IllegalArgumentException {\n    this.m.changeColor(null, 175, 0,0,0,0,1,\n        15, 80);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testChangeColorEmptyName() throws IllegalArgumentException {\n    this.m.changeColor(\"\", 175, 0,0,0,0,1,\n        15, 80);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testChangeColorWrongName() throws IllegalArgumentException {\n    this.m.changeColor(\"s\", 175, 0,0,0,0,1,\n        15, 80);\n  }\n\n  @Test(expected = IllegalArgumentException.class) //NOT PASSING?\n  // java.lang.AssertionError: Expected exception: java.lang.IllegalArgumentException\n  public void testChangeColorSimultaneously() throws IllegalArgumentException {\n    this.m.changeColor(\"c\", 175, 0,0,0,0,1,\n        15, 80);\n    this.m.changeColor(\"c\", 255, 0,0,0,0,1,\n        15, 100);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testChangeColorStopOutOfDisappearWindow() throws IllegalArgumentException {\n    this.m.changeColor(\"c\", 255, 0,0,0,0,1,\n        56, 200);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testChangeColorStopOutOfDisappearWindow1() throws IllegalArgumentException {\n    this.m.changeColor(\"c\", 255, 0,0,0,0,1,\n        56, 2);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testChangeColorStartOutOfAppearWindow1() throws IllegalArgumentException {\n    this.m.changeColor(\"c\", 255, 0,0,0,0,1,\n        123, 100);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testChangeColorStartOutOfAppearWindow() throws IllegalArgumentException {\n    this.m.changeColor(\"c\", 255, 0,0,0,0,1,\n        4, 100);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testChangeColorStopLessThanStart() throws IllegalArgumentException {\n    this.m.changeColor(\"c\", 255, 0,0,0,0,1,\n        89, 10);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testChangeColorSameStartStopTime() throws IllegalArgumentException {\n    this.m.changeColor(\"c\", 255, 0,0,0,0,1,\n        15, 15);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testChangeColorAllOutOfRGBRange() throws IllegalArgumentException {\n    this.m.changeColor(\"r\", 256, 300, 650, 0,0,\n        1, 40, 89);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testChangeColorAllNegative() throws IllegalArgumentException {\n    this.m.changeColor(\"r\", -210, -20, -200, 0,0,\n        1, 56, 99);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testChangeColorNegativeBlue() throws IllegalArgumentException {\n    this.m.changeColor(\"c\", 210, 20, -255, 0,0,\n        1, 56, 99);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testChangeColorOutOfRGBRangeBlue() throws IllegalArgumentException {\n    this.m.changeColor(\"r\", 230, 178, 500, 0,0,\n        1, 56, 99);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testChangeColorNegativeGreen() throws IllegalArgumentException {\n    this.m.changeColor(\"c\", 230, -20, 0, 0,0,\n        1, 56, 99);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testChangeColorOutOfRGBRangeGreen() throws IllegalArgumentException {\n    this.m.changeColor(\"c\", 230, 300, 0, 0,0,\n        1, 56, 99);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testChangeColorNegativeRed() throws IllegalArgumentException {\n    this.m.changeColor(\"r\", -150, 0,0,1, 0,0,\n        15, 100);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testChangeColorOutOfRGBRangeRed() throws IllegalArgumentException {\n    this.m.changeColor(\"r\", 270, 0,0,1, 0,0,\n        15, 100);\n  }\n\n  @Test\n  public void testChangeColor() {\n    this.m.changeColor(\"c\", 255, 0,0,0,0,1,\n        15, 100);\n\n    assertEquals(\"Shapes:\\n\"\n        + \"Name: r\\n\"\n        + \"Type: rectangle\\n\"\n        + \"Min corner: (200.0,200.0), Width: 50.0, Height: 100.0, Color: (1,0,0)\\n\"\n        + \"Appears at t=1\\n\"\n        + \"Disappears at t=100\\n\\n\"\n        + \"Name: c\\n\"\n        + \"Type: oval\\n\"\n        + \"Center: (500.0,100.0), X radius: 30.0, Y radius: 15.0, Color: (0,0,1)\\n\"\n        + \"Appears at t=6\\n\"\n        + \"Disappears at t=101\\n\\n\"\n        + \"Shape c changes color from (0,0,1) to (255,0,0) from t=15 to t=100\",\n        m.getAnimation());\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testMoveEmptyName() throws IllegalArgumentException {\n    this.m.move(\"\", 200, 200, 1, 100, 50, 100);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testMoveNullName() throws IllegalArgumentException {\n    this.m.move(null, 200, 200, 1, 100, 50, 100);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testMoveWrongName() throws IllegalArgumentException {\n    this.m.move(\"t\", 200, 200, 1, 100, 50, 100);\n  }\n\n  @Test(expected = IllegalArgumentException.class) // NOT PASSING??\n  // java.lang.AssertionError: Expected exception: java.lang.IllegalArgumentException\n  public void testMoveSameShape() throws IllegalArgumentException {\n    this.m.move(\"r\", 155, 120, 200, 200, 20, 34);\n    this.m.move(\"r\", 180, 140, 155, 120, 20, 34);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testMoveStopOutOfAppearWindow2() throws IllegalArgumentException {\n    this.m.move(\"r\",155, 120, 200, 200, 20, 0);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testMoveStopOutOfAppearWindow1() throws IllegalArgumentException {\n    this.m.move(\"r\",155, 120, 200, 200, 20, 101);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testMoveStartOutOfAppearWindow2() throws IllegalArgumentException {\n    this.m.move(\"c\", 140, 22, 500, 100, 103, 100);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testMoveStartOutOfAppearWindow1() throws IllegalArgumentException {\n    this.m.move(\"c\", 140, 22, 500, 100, 4, 100);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testMoveStopLessThanStartTick() throws IllegalArgumentException {\n    this.m.move(\"c\", 140, 22, 500, 100, 20, 10);\n  }\n\n  @Test\n  public void testMultipleMoveDiffShapeDiffTime() {\n    this.m.move(\"r\", 155, 120, 200, 200, 20, 34);\n    this.m.move(\"c\", 165, 150, 500, 100, 7, 30);\n    assertEquals(\"Shapes:\\n\"\n            + \"Name: r\\n\"\n            + \"Type: rectangle\\n\"\n            + \"Min corner: (200.0,200.0), Width: 50.0, Height: 100.0, Color: (1,0,0)\\n\"\n            + \"Appears at t=1\\n\"\n            + \"Disappears at t=100\\n\\n\"\n            + \"Name: c\\n\"\n            + \"Type: oval\\n\"\n            + \"Center: (500.0,100.0), X radius: 30.0, Y radius: 15.0, Color: (0,0,1)\\n\"\n            + \"Appears at t=6\\n\"\n            + \"Disappears at t=101\\n\\n\"\n            + \"Shape c moves from (500.0,100.0) to (165.0,150.0) from t=7 to t=30\\n\"\n            + \"Shape r moves from (200.0,200.0) to (155.0,120.0) from t=20 to t=34\",\n        this.m.getAnimation());\n  }\n\n  @Test\n  public void testMultipleMoveDiffShapeSameTime() {\n    this.m.move(\"r\", 155, 120, 200, 200, 20, 34);\n    this.m.move(\"c\", 165, 150, 500, 100, 20, 34);\n    assertEquals(\"Shapes:\\n\"\n        + \"Name: r\\n\"\n        + \"Type: rectangle\\n\"\n        + \"Min corner: (200.0,200.0), Width: 50.0, Height: 100.0, Color: (1,0,0)\\n\"\n        + \"Appears at t=1\\n\"\n        + \"Disappears at t=100\\n\\n\"\n        + \"Name: c\\n\"\n        + \"Type: oval\\n\"\n        + \"Center: (500.0,100.0), X radius: 30.0, Y radius: 15.0, Color: (0,0,1)\\n\"\n        + \"Appears at t=6\\n\"\n        + \"Disappears at t=101\\n\\n\"\n        + \"Shape r moves from (200.0,200.0) to (155.0,120.0) from t=20 to t=34\\n\"\n        + \"Shape c moves from (500.0,100.0) to (165.0,150.0) from t=20 to t=34\",\n        this.m.getAnimation());\n  }\n\n  @Test\n  public void testMultipleMoveSameShapeUnordered() {\n    this.m.move(\"r\",150, 170, 200,200,35,45);\n    this.m.move(\"r\", 155, 120, 150, 170, 20, 34);\n    assertEquals(\"Shapes:\\n\"\n            + \"Name: r\\n\"\n            + \"Type: rectangle\\n\"\n            + \"Min corner: (200.0,200.0), Width: 50.0, Height: 100.0, Color: (1,0,0)\\n\"\n            + \"Appears at t=1\\n\"\n            + \"Disappears at t=100\\n\\n\"\n            + \"Name: c\\n\"\n            + \"Type: oval\\n\"\n            + \"Center: (500.0,100.0), X radius: 30.0, Y radius: 15.0, Color: (0,0,1)\\n\"\n            + \"Appears at t=6\\n\"\n            + \"Disappears at t=101\\n\\n\"\n            + \"Shape r moves from (150.0,170.0) to (155.0,120.0) from t=20 to t=34\\n\"\n            + \"Shape r moves from (200.0,200.0) to (150.0,170.0) from t=35 to t=45\",\n        this.m.getAnimation());\n  }\n\n  @Test\n  public void testMultipleMoveSameShape() {\n    this.m.move(\"r\",150, 170, 200,200,35,45);\n    this.m.move(\"r\", 155, 120, 150, 170, 45, 55);\n    assertEquals(\"Shapes:\\n\"\n            + \"Name: r\\n\"\n            + \"Type: rectangle\\n\"\n            + \"Min corner: (200.0,200.0), Width: 50.0, Height: 100.0, Color: (1,0,0)\\n\"\n            + \"Appears at t=1\\n\"\n            + \"Disappears at t=100\\n\\n\"\n            + \"Name: c\\n\"\n            + \"Type: oval\\n\"\n            + \"Center: (500.0,100.0), X radius: 30.0, Y radius: 15.0, Color: (0,0,1)\\n\"\n            + \"Appears at t=6\\n\"\n            + \"Disappears at t=101\\n\\n\"\n            + \"Shape r moves from (200.0,200.0) to (150.0,170.0) from t=35 to t=45\\n\"\n            + \"Shape r moves from (150.0,170.0) to (155.0,120.0) from t=45 to t=55\",\n        this.m.getAnimation());\n  }\n\n  @Test\n  public void testSingleMove() {\n    this.m.move(\"r\",150, 170, 200,200,35,45);\n    assertEquals(\"Shapes:\\n\"\n        + \"Name: r\\n\"\n        + \"Type: rectangle\\n\"\n        + \"Min corner: (200.0,200.0), Width: 50.0, Height: 100.0, Color: (1,0,0)\\n\"\n        + \"Appears at t=1\\n\"\n        + \"Disappears at t=100\\n\\n\"\n        + \"Name: c\\n\"\n        + \"Type: oval\\n\"\n        + \"Center: (500.0,100.0), X radius: 30.0, Y radius: 15.0, Color: (0,0,1)\\n\"\n        + \"Appears at t=6\\n\"\n        + \"Disappears at t=101\\n\\n\"\n        + \"Shape r moves from (200.0,200.0) to (150.0,170.0) from t=35 to t=45\",\n        this.m.getAnimation());\n  }\n\n  @Test(expected = NoSuchElementException.class)\n  public void testRemoveShapeEmptyModel() throws NoSuchElementException {\n    this.model.removeShape(\"c\");\n  }\n\n  @Test(expected = NoSuchElementException.class)\n  public void testRemoveShapeNoSuchElement() throws NoSuchElementException {\n    this.m.removeShape(\"t\");\n  }\n\n  @Test\n  public void testRemoveShape2() {\n    this.m.removeShape(\"r\");\n    assertEquals(\"Shapes:\\n\"\n        + \"Name: c\\n\"\n        + \"Type: oval\\n\"\n        + \"Center: (500.0,100.0), X radius: 30.0, Y radius: 15.0, Color: (0,0,1)\\n\"\n        + \"Appears at t=6\\n\"\n        + \"Disappears at t=101\\n\\n\", this.m.getAnimation());\n  }\n\n  @Test\n  public void testRemoveShape() {\n    assertEquals(\"Shapes:\\n\", model.getAnimation()); // empty model\n    // add three rectangles to make a 3 tier cake\n    this.model.addShape(new Rectangle(0,0, 2, 20, 5, 1,\n        255,0,0), \"bottom\");\n    this.model.addShape(new Rectangle(1,1, 4, 20, 3,\n        1, 0, 255,0), \"middle\");\n    this.model.addShape(new Rectangle(2,2,8, 20, 1,1,\n        0, 0,255), \"top\");\n    assertEquals(\"Shapes:\\n\"\n        + \"Name: bottom\\n\"\n        + \"Type: rectangle\\n\"\n        + \"Min corner: (0.0,0.0), Width: 5.0, Height: 1.0, Color: (255,0,0)\\n\"\n        + \"Appears at t=2\\n\"\n        + \"Disappears at t=20\\n\\n\"\n        + \"Name: middle\\n\"\n        + \"Type: rectangle\\n\"\n        + \"Min corner: (1.0,1.0), Width: 3.0, Height: 1.0, Color: (0,255,0)\\n\"\n        + \"Appears at t=4\\n\"\n        + \"Disappears at t=20\\n\\n\"\n        + \"Name: top\\n\"\n        + \"Type: rectangle\\n\"\n        + \"Min corner: (2.0,2.0), Width: 1.0, Height: 1.0, Color: (0,0,255)\\n\"\n        + \"Appears at t=8\\n\"\n        + \"Disappears at t=20\\n\\n\", model.getAnimation());\n\n    this.model.removeShape(\"middle\");\n    assertEquals(\"Shapes:\\n\"\n        + \"Name: bottom\\n\"\n        + \"Type: rectangle\\n\"\n        + \"Min corner: (0.0,0.0), Width: 5.0, Height: 1.0, Color: (255,0,0)\\n\"\n        + \"Appears at t=2\\n\"\n        + \"Disappears at t=20\\n\\n\"\n        + \"Name: top\\n\"\n        + \"Type: rectangle\\n\"\n        + \"Min corner: (2.0,2.0), Width: 1.0, Height: 1.0, Color: (0,0,255)\\n\"\n        + \"Appears at t=8\\n\"\n        + \"Disappears at t=20\\n\\n\", model.getAnimation());\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testAddShapeNullAndEmpty() throws IllegalArgumentException {\n    this.model.addShape(null, \"\");\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testAddShapeNullAndNull() throws IllegalArgumentException {\n    this.model.addShape(null, null);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testAddShapeAlreadyExisting() throws IllegalArgumentException {\n    this.model.addShape(this.c, \"c\");\n    this.model.addShape(this.r, \"c\");\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testAddShapeNullShape() throws IllegalArgumentException {\n    this.model.addShape(null, \"c\");\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testAddShapeEmptyName() throws IllegalArgumentException {\n    this.model.addShape(new Rectangle(5,9,5, 20, 1, 8,\n        150, 255, 150), \"\");\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testAddShapeNullName() throws IllegalArgumentException {\n    this.model.addShape(new Oval(5,5,10, 200, 4, 10,\n        150, 20, 150), null);\n  }\n\n  @Test\n  public void testEmptyGetAnimation() {\n    assertEquals(\"Shapes:\\n\", model.getAnimation());\n  }\n\n  @Test()\n  public void testAddShape() {\n    assertEquals(\"Shapes:\\n\", model.getAnimation()); // empty model\n    // add three rectangles to make a 3 tier cake\n    this.model.addShape(new Rectangle(0,0, 2, 20, 5, 1,\n        255,0,0), \"bottom\");\n    this.model.addShape(new Rectangle(1,1, 4, 20, 3,\n        1, 0, 255,0), \"middle\");\n    this.model.addShape(new Rectangle(2,2,8, 20, 1,1,\n        0, 0,255), \"top\");\n\n    assertEquals(\"Shapes:\\n\"\n        + \"Name: bottom\\n\"\n        + \"Type: rectangle\\n\"\n        + \"Min corner: (0.0,0.0), Width: 5.0, Height: 1.0, Color: (255,0,0)\\n\"\n        + \"Appears at t=2\\n\"\n        + \"Disappears at t=20\\n\\n\"\n        + \"Name: middle\\n\"\n        + \"Type: rectangle\\n\"\n        + \"Min corner: (1.0,1.0), Width: 3.0, Height: 1.0, Color: (0,255,0)\\n\"\n        + \"Appears at t=4\\n\"\n        + \"Disappears at t=20\\n\\n\"\n        + \"Name: top\\n\"\n        + \"Type: rectangle\\n\"\n        + \"Min corner: (2.0,2.0), Width: 1.0, Height: 1.0, Color: (0,0,255)\\n\"\n        + \"Appears at t=8\\n\"\n        + \"Disappears at t=20\\n\\n\", model.getAnimation());\n\n  }\n\n  @Test\n  public void testGetAnimation() {\n    this.model.addShape(this.r, \"r\");\n    this.model.addShape(this.c, \"c\");\n    this.model.move(\"c\", 500,400,500,100,20,70);\n    this.model.move(\"r\", 300,300,200,200,10,50);\n    this.model.changeColor(\"c\", 0, 1,0,0,0,\n        1,50,80);\n    this.model.scaleShape(\"r\", 25,100,100,50,51,\n        70);\n    this.model.move(\"r\", 200,200,300,300,70,100);\n\n    assertEquals(\"Shapes:\\n\"\n            + \"Name: r\\n\"\n            + \"Type: rectangle\\n\"\n            + \"Min corner: (200.0,200.0), Width: 50.0, Height: 100.0, Color: (1,0,0)\\n\"\n            + \"Appears at t=1\\n\"\n            + \"Disappears at t=100\\n\\n\"\n            + \"Name: c\\n\"\n            + \"Type: oval\\n\"\n            + \"Center: (500.0,100.0), X radius: 30.0, Y radius: 15.0, Color: (0,0,1)\\n\"\n            + \"Appears at t=6\\n\"\n            + \"Disappears at t=101\\n\\n\"\n            + \"Shape r moves from (200.0,200.0) to (300.0,300.0) from t=10 to t=50\\n\"\n            + \"Shape c moves from (500.0,100.0) to (500.0,400.0) from t=20 to t=70\\n\"\n            + \"Shape c changes color from (0,0,1) to (0,0,1) from t=50 to t=80\\n\"\n            + \"Shape r scales from Width: 50.0, Height: 100.0 to Width: 25.0, Height: 100.0 from \"\n            + \"t=51 to t=70\\n\"\n            + \"Shape r moves from (300.0,300.0) to (200.0,200.0) from t=70 to t=100\",\n            this.model.getAnimation());\n  }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test/AnimatorModelTest.java b/test/AnimatorModelTest.java
--- a/test/AnimatorModelTest.java	(revision 6b54520635335f053ed4bcfd01a16380b78af710)
+++ b/test/AnimatorModelTest.java	(date 1617656554789)
@@ -449,7 +449,7 @@
         this.m.getAnimation());
   }
 
-  @Test
+  @Test // problematic
   public void testMultipleMoveSameShapeUnordered() {
     this.m.move("r",150, 170, 200,200,35,45);
     this.m.move("r", 155, 120, 150, 170, 20, 34);
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"69f1e94a-ade2-43a4-a667-ed533cb933a3\" name=\"Default Changelist\" comment=\"switched RGB double to int\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/test/Animation_5004/AnimatorModelTest.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/test/Animation_5004/AnimatorModelTest.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/test/AbstractShapeTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/test/AbstractShapeTest.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/test/AnimatorModelTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/test/AnimatorModelTest.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Merge.Settings\">\n    <option name=\"BRANCH\" value=\"origin/main\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"ProjectId\" id=\"1qVBHX49iHTvI3PkL9O2fctjGP0\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"aspect.path.notification.shown\" value=\"true\" />\n    <property name=\"last_directory_selection\" value=\"$PROJECT_DIR$/src/cs5004/animator/model\" />\n    <property name=\"node.js.path.for.package.tslint\" value=\"project\" />\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\n  </component>\n  <component name=\"RunManager\" selected=\"JUnit.AnimatorModelTest\">\n    <configuration default=\"true\" type=\"ArquillianTestNG\" factoryName=\"\" nameIsGenerated=\"true\">\n      <option name=\"arquillianRunConfiguration\">\n        <value>\n          <option name=\"containerStateName\" value=\"\" />\n        </value>\n      </option>\n      <option name=\"TEST_OBJECT\" value=\"CLASS\" />\n      <properties />\n      <listeners />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"AbstractShapeTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"Animation_5004\" />\n      <option name=\"PACKAGE_NAME\" value=\"\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"AbstractShapeTest\" />\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"AnimatorModelTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"Animation_5004\" />\n      <option name=\"PACKAGE_NAME\" value=\"\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"AnimatorModelTest\" />\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"AnimatorModelTest.test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"Animation_5004\" />\n      <option name=\"PACKAGE_NAME\" value=\"\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"AnimatorModelTest\" />\n      <option name=\"METHOD_NAME\" value=\"test\" />\n      <option name=\"TEST_OBJECT\" value=\"method\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"AnimatorModelTest.testChangeColor\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"Animation_5004\" />\n      <option name=\"PACKAGE_NAME\" value=\"\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"AnimatorModelTest\" />\n      <option name=\"METHOD_NAME\" value=\"testChangeColor\" />\n      <option name=\"TEST_OBJECT\" value=\"method\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"AnimatorModelTest.testGetAnimation\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"Animation_5004\" />\n      <option name=\"PACKAGE_NAME\" value=\"\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"AnimatorModelTest\" />\n      <option name=\"METHOD_NAME\" value=\"testGetAnimation\" />\n      <option name=\"TEST_OBJECT\" value=\"method\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"JUnit.AnimatorModelTest\" />\n        <item itemvalue=\"JUnit.AnimatorModelTest.testGetAnimation\" />\n        <item itemvalue=\"JUnit.AnimatorModelTest.testChangeColor\" />\n        <item itemvalue=\"JUnit.AbstractShapeTest\" />\n        <item itemvalue=\"JUnit.AnimatorModelTest.test\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"69f1e94a-ade2-43a4-a667-ed533cb933a3\" name=\"Default Changelist\" comment=\"\" />\n      <created>1617154790338</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1617154790338</updated>\n      <workItem from=\"1617154794553\" duration=\"4822000\" />\n      <workItem from=\"1617217402480\" duration=\"25761000\" />\n      <workItem from=\"1617487830924\" duration=\"15399000\" />\n      <workItem from=\"1617641055435\" duration=\"631000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"added oval toString\">\n      <created>1617155450194</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617155450194</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"added rectangle toString\">\n      <created>1617155628464</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617155628464</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"added Event classes (changeColor and scaleShape) and added all event toString in those classes\">\n      <created>1617159918377</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617159918377</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"added Event classes (changeColor and scaleShape) and added all event toString in those classes\">\n      <created>1617159991990</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617159991990</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"started adding tests - also added a new method in ReadonlyShape -&gt; getColor (returns a string of all the color coordinates) still work in progress!\">\n      <created>1617305578134</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617305578134</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"added some more tests - still working on these\">\n      <created>1617306886918</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617306886918</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"added the rest of the setter tests for AbstractShapeTest should be done!\">\n      <created>1617390573682</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617390573682</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"added the rest of the setter tests for AbstractShapeTest should be done!\">\n      <created>1617391127379</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617391127379</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"refactored scaleHeight/Width into single scaleShape\">\n      <created>1617461133544</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617461133544</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"refactored scaleHeight/Width into single scaleShape\">\n      <created>1617461202777</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617461202777</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"refactored Time and Dimension\">\n      <created>1617464731274</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617464731274</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"refactored Time and Dimension\">\n      <created>1617465082985</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617465082985</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"refactored Time and Dimension\">\n      <created>1617466098735</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617466098735</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"refactored Time and Dimension\">\n      <created>1617471172333</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617471172333</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"format edits\">\n      <created>1617471195111</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617471195111</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"edits to abstractshapetest\">\n      <created>1617471997899</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617471997899</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"Deleted ReadonlyShape\">\n      <created>1617480004543</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617480004543</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"Deleted ReadonlyShape\">\n      <created>1617480019366</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617480019366</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"Changed package to cs5004.animator.model\">\n      <created>1617480168323</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617480168323</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"Changed package to cs5004.animator.model\">\n      <created>1617480253175</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617480253175</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\"finished all java doc in non-test classes\">\n      <created>1617490230578</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617490230578</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"edited AnimationModel first test\">\n      <created>1617490837816</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617490837816</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"added Animator Model Tests\">\n      <created>1617500247828</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617500247828</updated>\n    </task>\n    <task id=\"LOCAL-00024\" summary=\"added more Animator Model Tests\">\n      <created>1617502202927</created>\n      <option name=\"number\" value=\"00024\" />\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617502202927</updated>\n    </task>\n    <task id=\"LOCAL-00025\" summary=\"debugging/cleaning up for java style\">\n      <created>1617570495647</created>\n      <option name=\"number\" value=\"00025\" />\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617570495647</updated>\n    </task>\n    <task id=\"LOCAL-00026\" summary=\"minor debug with ChangeColor string\">\n      <created>1617633529721</created>\n      <option name=\"number\" value=\"00026\" />\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617633529721</updated>\n    </task>\n    <task id=\"LOCAL-00027\" summary=\"minor debug with ChangeColor string\">\n      <created>1617633652091</created>\n      <option name=\"number\" value=\"00027\" />\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617633652091</updated>\n    </task>\n    <task id=\"LOCAL-00028\" summary=\"created res directory\">\n      <created>1617645988540</created>\n      <option name=\"number\" value=\"00028\" />\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617645988540</updated>\n    </task>\n    <task id=\"LOCAL-00029\" summary=\"switched RGB double to int\">\n      <created>1617647959466</created>\n      <option name=\"number\" value=\"00029\" />\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617647959466</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"30\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"added oval toString\" />\n    <MESSAGE value=\"added rectangle toString\" />\n    <MESSAGE value=\"added Event classes (changeColor and scaleShape) and added all event toString in those classes\" />\n    <MESSAGE value=\"started adding tests - also added a new method in ReadonlyShape -&gt; getColor (returns a string of all the color coordinates) still work in progress!\" />\n    <MESSAGE value=\"added some more tests - still working on these\" />\n    <MESSAGE value=\"added the rest of the setter tests for AbstractShapeTest should be done!\" />\n    <MESSAGE value=\"refactored scaleHeight/Width into single scaleShape\" />\n    <MESSAGE value=\"refactored Time and Dimension\" />\n    <MESSAGE value=\"format edits\" />\n    <MESSAGE value=\"edits to abstractshapetest\" />\n    <MESSAGE value=\"Deleted ReadonlyShape\" />\n    <MESSAGE value=\"Changed package to cs5004.animator.model\" />\n    <MESSAGE value=\"finished all java doc in non-test classes\" />\n    <MESSAGE value=\"edited AnimationModel first test\" />\n    <MESSAGE value=\"added Animator Model Tests\" />\n    <MESSAGE value=\"added more Animator Model Tests\" />\n    <MESSAGE value=\"debugging/cleaning up for java style\" />\n    <MESSAGE value=\"minor debug with ChangeColor string\" />\n    <MESSAGE value=\"created res directory\" />\n    <MESSAGE value=\"switched RGB double to int\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"switched RGB double to int\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 6b54520635335f053ed4bcfd01a16380b78af710)
+++ b/.idea/workspace.xml	(date 1617663386680)
@@ -1,10 +1,17 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="69f1e94a-ade2-43a4-a667-ed533cb933a3" name="Default Changelist" comment="switched RGB double to int">
+    <list default="true" id="69f1e94a-ade2-43a4-a667-ed533cb933a3" name="Default Changelist" comment="fixed tests RGB">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/test/Animation_5004/AnimatorModelTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/test/Animation_5004/AnimatorModelTest.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/test/AbstractShapeTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/test/AbstractShapeTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/Animation_5004/cs5004/animator/model/animation/Animator.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Animation_5004/cs5004/animator/model/animation/Animator.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/Animation_5004/cs5004/animator/model/animation/AnimatorModel.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Animation_5004/cs5004/animator/model/animation/AnimatorModel.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/Animation_5004/cs5004/animator/model/animation/ChangeColor.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Animation_5004/cs5004/animator/model/animation/ChangeColor.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/Animation_5004/cs5004/animator/model/shape/AbstractShape.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Animation_5004/cs5004/animator/model/shape/AbstractShape.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/Animation_5004/cs5004/animator/model/shape/Color.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Animation_5004/cs5004/animator/model/shape/Color.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/Animation_5004/cs5004/animator/model/shape/Oval.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Animation_5004/cs5004/animator/model/shape/Oval.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/Animation_5004/cs5004/animator/model/shape/Rectangle.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Animation_5004/cs5004/animator/model/shape/Rectangle.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/Animation_5004/cs5004/animator/model/shape/Shape.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Animation_5004/cs5004/animator/model/shape/Shape.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/test/Animation_5004/AbstractShapeTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/test/Animation_5004/AbstractShapeTest.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/test/AnimatorModelTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/test/AnimatorModelTest.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -49,19 +56,6 @@
     <property name="node.js.selected.package.tslint" value="(autodetect)" />
   </component>
   <component name="RunManager" selected="JUnit.AnimatorModelTest">
-    <configuration default="true" type="ArquillianTestNG" factoryName="" nameIsGenerated="true">
-      <option name="arquillianRunConfiguration">
-        <value>
-          <option name="containerStateName" value="" />
-        </value>
-      </option>
-      <option name="TEST_OBJECT" value="CLASS" />
-      <properties />
-      <listeners />
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
     <configuration name="AbstractShapeTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="Animation_5004" />
       <option name="PACKAGE_NAME" value="" />
@@ -132,6 +126,7 @@
       <workItem from="1617217402480" duration="25761000" />
       <workItem from="1617487830924" duration="15399000" />
       <workItem from="1617641055435" duration="631000" />
+      <workItem from="1617660823079" duration="844000" />
     </task>
     <task id="LOCAL-00001" summary="added oval toString">
       <created>1617155450194</created>
@@ -336,7 +331,14 @@
       <option name="project" value="LOCAL" />
       <updated>1617647959466</updated>
     </task>
-    <option name="localTasksCounter" value="30" />
+    <task id="LOCAL-00030" summary="fixed tests RGB">
+      <created>1617649819054</created>
+      <option name="number" value="00030" />
+      <option name="presentableId" value="LOCAL-00030" />
+      <option name="project" value="LOCAL" />
+      <updated>1617649819055</updated>
+    </task>
+    <option name="localTasksCounter" value="31" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -375,6 +377,7 @@
     <MESSAGE value="minor debug with ChangeColor string" />
     <MESSAGE value="created res directory" />
     <MESSAGE value="switched RGB double to int" />
-    <option name="LAST_COMMIT_MESSAGE" value="switched RGB double to int" />
+    <MESSAGE value="fixed tests RGB" />
+    <option name="LAST_COMMIT_MESSAGE" value="fixed tests RGB" />
   </component>
 </project>
\ No newline at end of file
